version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: titans-postgres
    environment:
      POSTGRES_DB: titans_db
      POSTGRES_USER: titans_user
      POSTGRES_PASSWORD: titans_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U titans_user -d titans_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  titans-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: titans-api
    environment:
      # Database configuration
      DB_NAME: titans_db
      DB_USER: titans_user
      DB_PASSWORD: titans_password
      DB_HOST: postgres
      DB_PORT: 5432

      # API Keys (set these in your environment or .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}

      # Model configuration
      MODELS_DIR: /app/models
      CHROMA_DB_PATH: /app/chroma_db
      EMBEDDING_MODEL: text-embedding-ada-002

      # OpenAI configuration
      OPENAI_BASE_URL: https://api.openai.com/v1
      DEFAULT_OPENAI_MODEL: gpt-3.5-turbo
    volumes:
      # Persist storage, models, and database
      - titans_storage:/app/storage
      - titans_models:/app/models
      - titans_chroma:/app/chroma_db
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Alternative service for ARM64 systems
  titans-api-arm64:
    build:
      context: .
      dockerfile: Dockerfile.arm64
    container_name: titans-api-arm64
    profiles: ["arm64"] # Only start when explicitly requested
    environment:
      # Database configuration
      DB_NAME: titans_db
      DB_USER: titans_user
      DB_PASSWORD: titans_password
      DB_HOST: postgres
      DB_PORT: 5432

      # API Keys (set these in your environment or .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}

      # Model configuration
      MODELS_DIR: /app/models
      CHROMA_DB_PATH: /app/chroma_db
      EMBEDDING_MODEL: text-embedding-ada-002

      # OpenAI configuration
      OPENAI_BASE_URL: https://api.openai.com/v1
      DEFAULT_OPENAI_MODEL: gpt-3.5-turbo
    volumes:
      # Persist storage, models, and database
      - titans_storage:/app/storage
      - titans_models:/app/models
      - titans_chroma:/app/chroma_db
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  titans_storage:
  titans_models:
  titans_chroma:
